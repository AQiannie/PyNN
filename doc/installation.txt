============
Installation
============

Use of PyNN_ requires that you have Python and the numpy_ package installed, plus at least one of the supported simulators: NEURON, NEST or PCSIM.


Installing NEURON
=================

Download the sources for the latest release of NEURON, in ``.tar.gz`` format, from `<http://www.neuron.yale.edu/neuron/install/install.html>`_. Also download Interviews from the same location.

Compile Interviews and NEURON according to the instructions given at `<http://www.neuron.yale.edu/neuron/install/compile_unix.html#fullinstall>`_, except that when you run ``configure``, add the options ``--with-nrnpython`` and, optionally, ``--with-mpi`` (the latter assumes you have the MPICH library installed on your machine), i.e.::

    $ ./configure --prefix=`pwd` --with-nrnpython --with-mpi
    $ make
    $ make install

Make sure that you add the Interviews and NEURON bin directories to your path. Test that the Python support has been enabled by running::

    $ nrniv -python
    NEURON -- Release 5.9.9 (1529) 2006-09-11
    by John W. Moore, Michael Hines, and Ted Carnevale
    Duke and Yale University -- Copyright 1984-2006

    >>> import hoc
    >>> import nrn   

Installing NEST and PyNEST
==========================

NEST can be downloaded from `<http://www.nest-initiative.org/?page=Software&subpage=Download>`_.
Installation instructions are available from `<http://www.nest-initiative.uni-freiburg.de/helpdesk/synod2/doc/install.html>`_.

Download PyNEST from `<http://www.nest-initiative.org/index.php/Image:Pynest1.tgz>`_, change to the directory to which you downloaded it, then::

    $ tar xzf Pynest1.tgz
    $ cd pynest1
    
Set the ``SLIHOME`` environment variable to your NEST source installation and ``SLIBUILD`` to your NEST build directory, e.g. (for bash)::

    $ export SLIHOME=/usr/src/nest-1.0.13
    $ export SLIBUILD=$SLIHOME/build
    
Finally, build and install PyNEST::

    $ python setup.py install
    
This will install it to your python ``site-packages`` directory, and may require root privileges.
If you wish to install it elsewhere::

    $ python setup.py install --prefix=/where/to/install/pynest
    
and then set the ``PYTHONPATH`` environment variable appropriately, e.g.::
    
    $ export PYTHONPATH=$PYTHONPATH:/where/to/install/pynest/lib/python2.4/site-packages/

Now try it out::

    $ cd ~ 
    $ python 
    >>> import pynest 
    >>> pynest.sps([1,2,3]) 
    >>> pynest.spp() 
    [1, 2, 3]


Installing PCSIM
================

PCSIM_ is available by svn as follows:

    $ svn co https://pcsim.svn.sourceforge.net/svnroot/pcsim pcsim

For compilation instructions, see the files in the ``HowTos`` directory.


Installing PyNN
===============

The easiest way to get PyNN is to download the latest source distribution from the `PyNN download page`_, then run the setup script, e.g.::

    $ tar xzf PyNN-0.3.0.tar.gz
    $ cd PyNN-0.3.0
    $ python setup.py install
    
This will install it to your python ``site-packages`` directory, and may require root privileges. If you wish to install it elsewhere use the ``--prefix`` option, and set the ``PYTHONPATH`` environment variable accordingly (see above).

Test it using something like the following::

    >>> from pyNN.nest1 import *
    >>> setup()
    >>> end()
    
(This assumes you have PyNEST installed).

If you wish to use NEURON, there is are some additional steps.

1. Copy the ``hoc`` directory of the source distribution to the pyNN installation directory, e.g.::

    $ cp hoc /usr/lib/python/site-packages/pyNN

2. Move to this directory, and compile the mod files::

    $ cd /usr/lib/python/site-packages/pyNN/hoc
    $ nrnivmodl
    $ alias nrnpython='/usr/lib/python/site-packages/pyNN/hoc/i686/special -python'
    
Again, you are likely to need root privileges.

You should now be able to run PyNN with NEURON as the simulator::

    $ nrnpython
    NEURON -- Release 5.9.9 (1529) 2006-09-11
    by John W. Moore, Michael Hines, and Ted Carnevale
    Duke and Yale University -- Copyright 1984-2006

    loading membrane mechanisms from /usr/lib/python/site-packages/pyNN/hoc/i686/.libs/libnrnmech.so
    Additional mechanisms from files
     alphaisyn.mod alphasyn.mod expisyn.mod refrac.mod reset.mod stdwa_softlimits.mod
     stdwa_songabbott.mod stdwa_symm.mod vecstim.mod
    >>> from pyNN.neuron import *
    
If your model relies on other NMODL mechanisms, copy the mod files from pyNN/hoc to the directory in which they are contained, run ``nrnivmodl`` again, and modify the ``nrnpython`` alias accordingly.


Running PyNN on a parallel machine
==================================

[to write - mention both threads and MPI]

.. _PyNN: http://neuralensemble.kip.uni-heidelberg.de/trac/PyNN
.. _numpy: http://numpy.scipy.org/
.. _PCSIM: http://sourceforge.net/projects/pcsim/
.. _`PyNN download page`: https://neuralensemble.kip.uni-heidelberg.de/trac/PyNN/wiki/Download